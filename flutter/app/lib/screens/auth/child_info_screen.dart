// lib/screens/auth/child_info_screen.dart
import 'package:flutter/material.dart';
import 'package:dio/dio.dart';
import '../../main.dart';
import '../service/auth_service.dart';
import '../service/api_service.dart';


class ChildInfoScreen extends StatefulWidget {
  @override
  _ChildInfoScreenState createState() => _ChildInfoScreenState();
}

class _ChildInfoScreenState extends State<ChildInfoScreen> {
  final TextEditingController _nameController = TextEditingController();
  DateTime? _selectedDate;
  String _selectedGender = 'unknown';
  bool _isLoading = false;

  Future<void> _pickDate() async {
    final now = DateTime.now();
    final picked = await showDatePicker(
      context: context,
      initialDate: now,
      firstDate: DateTime(now.year - 5),
      lastDate: DateTime(now.year + 1), // Ï∂úÏÇ∞ ÏòàÏ†ïÏùºÎèÑ Í≥†Î†§
      builder: (context, child) {
        return Theme(
          data: Theme.of(context).copyWith(
            colorScheme: ColorScheme.light(
              primary: Color(0xFF8B5A6B),
            ),
          ),
          child: child!,
        );
      },
    );
    if (picked != null) {
      setState(() {
        _selectedDate = picked;
      });
    }
  }

  // ‚úÖ ÏïÑÏù¥ Ï†ïÎ≥¥Î•º ÏÑúÎ≤ÑÏóê Ï†ÄÏû•
  Future<bool> _saveChildInfo() async {
    if (_nameController.text.trim().isEmpty || _selectedDate == null) {
      _showErrorDialog('ÏïÑÏù¥Ïùò Ïù¥Î¶ÑÍ≥º ÏÉùÏùºÏùÑ Î™®Îëê ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.');
      return false;
    }

    setState(() {
      _isLoading = true;
    });

    try {
      final accessToken = await AuthService.getAccessToken();
      final userId = await AuthService.getUserId();

      if (accessToken == null || userId == null) {
        _showErrorDialog('Î°úÍ∑∏Ïù∏ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§. Îã§Ïãú Î°úÍ∑∏Ïù∏Ìï¥Ï£ºÏÑ∏Ïöî.');
        return false;
      }

      final response = await ApiService.dio.post(
        '/api/baby',
        data: {
          'userId': userId,
          'name': _nameController.text.trim(),
          'gender': _selectedGender,
          'birthDate': '${_selectedDate!.year}-${_selectedDate!.month.toString().padLeft(2, '0')}-${_selectedDate!.day.toString().padLeft(2, '0')}',
        },
        options: Options(
          headers: {
            'Content-Type': 'application/json',
            'Authorization': 'Bearer $accessToken',
          },
        ),
      );

      print('ÏïÑÏù¥ Ï†ïÎ≥¥ Ï†ÄÏû• ÏùëÎãµ: ${response.data}');

      if (response.data['success'] == true) {
        print('ÏïÑÏù¥ Ï†ïÎ≥¥ Ï†ÄÏû• ÏÑ±Í≥µ!');

        // ÏÑ±Í≥µ Î©îÏãúÏßÄ ÌëúÏãú
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(
            content: Text('ÏïÑÏù¥ Ï†ïÎ≥¥Í∞Ä Ï†ÄÏû•ÎêòÏóàÏäµÎãàÎã§! üéâ'),
            backgroundColor: Color(0xFF8B5A6B),
          ),
        );

        return true;
      }
      return false;
    } catch (e) {
      print('ÏïÑÏù¥ Ï†ïÎ≥¥ Ï†ÄÏû• Ïò§Î•ò: $e');
      if (e is DioException) {
        if (e.response?.statusCode == 401) {
          _showErrorDialog('Î°úÍ∑∏Ïù∏Ïù¥ ÎßåÎ£åÎêòÏóàÏäµÎãàÎã§. Îã§Ïãú Î°úÍ∑∏Ïù∏Ìï¥Ï£ºÏÑ∏Ïöî.');
          // Î°úÍ∑∏Ïù∏ ÌôîÎ©¥ÏúºÎ°ú Ïù¥Îèô
          Navigator.pushNamedAndRemoveUntil(context, '/login', (route) => false);
          return false;
        }
      }
      _showErrorDialog('ÏïÑÏù¥ Ï†ïÎ≥¥ Ï†ÄÏû•Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§. Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.');
      return false;
    } finally {
      setState(() {
        _isLoading = false;
      });
    }
  }

  void _showErrorDialog(String message) {
    showDialog(
      context: context,
      builder: (_) => AlertDialog(
        title: const Text('ÏïåÎ¶º'),
        content: Text(message),
        actions: [
          TextButton(
            onPressed: () => Navigator.pop(context),
            child: const Text('ÌôïÏù∏'),
          ),
        ],
      ),
    );
  }

  void _showBackDialog() {
    showDialog(
      context: context,
      builder: (_) => AlertDialog(
        title: const Text('Îí§Î°ú Í∞ÄÍ∏∞'),
        content: const Text('ÏïÑÏù¥ Ï†ïÎ≥¥Î•º ÏûÖÎ†•ÌïòÏßÄ ÏïäÍ≥† ÎÇòÍ∞ÄÏãúÍ≤†ÏäµÎãàÍπå?\nÎ°úÍ∑∏ÏïÑÏõÉÎê©ÎãàÎã§.'),
        actions: [
          TextButton(
            onPressed: () => Navigator.pop(context),
            child: const Text('Ï∑®ÏÜå'),
          ),
          TextButton(
            onPressed: () async {
              Navigator.pop(context);
              await AuthService.logout();
              Navigator.pushNamedAndRemoveUntil(context, '/login', (route) => false);
            },
            child: const Text('ÎÇòÍ∞ÄÍ∏∞'),
          ),
        ],
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    final screenWidth = MediaQuery.of(context).size.width;
    final screenHeight = MediaQuery.of(context).size.height;

    return BaseScaffold(
      child: SafeArea(
        child: Padding(
          padding: EdgeInsets.all(screenWidth * 0.06),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              // ÏÉÅÎã® Ìó§Îçî
              Row(
                children: [
                  IconButton(
                    icon: const Icon(Icons.arrow_back, color: Color(0xFF8B5A6B)),
                    onPressed: () {
                      // Îí§Î°úÍ∞ÄÍ∏∞ Ïãú Î°úÍ∑∏ÏïÑÏõÉ ÌõÑ Î°úÍ∑∏Ïù∏ ÌôîÎ©¥ÏúºÎ°ú
                      _showBackDialog();
                    },
                  ),
                  Expanded(
                    child: Text(
                      'ÏïÑÏù¥ Ï†ïÎ≥¥ ÏûÖÎ†•',
                      textAlign: TextAlign.center,
                      style: TextStyle(
                        fontSize: screenWidth * 0.05,
                        fontWeight: FontWeight.bold,
                        color: Color(0xFF8B5A6B),
                      ),
                    ),
                  ),
                  const SizedBox(width: 48), // Í∑†Ìòï ÎßûÏ∂îÍ∏∞
                ],
              ),

              SizedBox(height: screenHeight * 0.04),

              // ÏïàÎÇ¥ ÌÖçÏä§Ìä∏
              Container(
                padding: EdgeInsets.all(screenWidth * 0.04),
                decoration: BoxDecoration(
                  color: Color(0xFFFFE7B0).withOpacity(0.3),
                  borderRadius: BorderRadius.circular(12),
                  border: Border.all(color: Color(0xFFECA666), width: 1),
                ),
                child: Text(
                  'Ïö∞Î¶¨ ÏïÑÏù¥ÎßåÏùÑ ÏúÑÌïú ÌäπÎ≥ÑÌïú ÎèôÌôîÎ•º ÎßåÎì§Ïñ¥ÎìúÎ†§Ïöî! üìö‚ú®\nÏïÑÏù¥Ïùò Ï†ïÎ≥¥Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.',
                  style: TextStyle(
                    fontSize: screenWidth * 0.035,
                    color: Color(0xFF8B5A6B),
                    height: 1.4,
                  ),
                  textAlign: TextAlign.center,
                ),
              ),

              SizedBox(height: screenHeight * 0.04),

              // Ïù¥Î¶Ñ ÏûÖÎ†•
              Text(
                'ÏïÑÏù¥ Ïù¥Î¶Ñ (ÌÉúÎ™Ö)',
                style: TextStyle(
                  fontSize: screenWidth * 0.04,
                  fontWeight: FontWeight.w600,
                  color: Color(0xFF8B5A6B),
                ),
              ),
              SizedBox(height: screenHeight * 0.01),
              TextField(
                controller: _nameController,
                keyboardType: TextInputType.text,
                textInputAction: TextInputAction.done,
                maxLength: 20, // ÏµúÎåÄ Í∏ÄÏûê Ïàò Ï†úÌïú
                buildCounter: (context, {required currentLength, required isFocused, maxLength}) {
                  return null; // Í∏ÄÏûê Ïàò Ïπ¥Ïö¥ÌÑ∞ Ïà®ÍπÄ
                },
                decoration: InputDecoration(
                  hintText: 'ÏïÑÏù¥Ïùò Ïù¥Î¶Ñ(ÌÉúÎ™Ö)ÏùÑ ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî',
                  hintStyle: TextStyle(color: Colors.grey[600]),
                  fillColor: Color(0xFFFFE7B0),
                  filled: true,
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(16),
                    borderSide: BorderSide.none,
                  ),
                  focusedBorder: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(16),
                    borderSide: BorderSide(color: Color(0xFF8B5A6B), width: 2),
                  ),
                  contentPadding: EdgeInsets.symmetric(
                    horizontal: screenWidth * 0.04,
                    vertical: screenHeight * 0.02,
                  ),
                ),
                style: TextStyle(
                  fontSize: screenWidth * 0.04,
                  color: Colors.black87,
                ),
                cursorColor: Color(0xFF8B5A6B),
              ),

              SizedBox(height: screenHeight * 0.03),

              // ÏÑ±Î≥Ñ ÏÑ†ÌÉù
              Text(
                'ÏÑ±Î≥Ñ',
                style: TextStyle(
                  fontSize: screenWidth * 0.04,
                  fontWeight: FontWeight.w600,
                  color: Color(0xFF8B5A6B),
                ),
              ),
              SizedBox(height: screenHeight * 0.01),
              Row(
                children: [
                  Expanded(
                    child: GestureDetector(
                      onTap: () => setState(() => _selectedGender = 'male'),
                      child: Container(
                        padding: EdgeInsets.symmetric(vertical: screenHeight * 0.02),
                        decoration: BoxDecoration(
                          color: _selectedGender == 'male'
                              ? Color(0xFF8B5A6B)
                              : Color(0xFFFFE7B0),
                          borderRadius: BorderRadius.circular(12),
                          border: Border.all(
                            color: _selectedGender == 'male'
                                ? Color(0xFF8B5A6B)
                                : Color(0xFFECA666),
                            width: 1,
                          ),
                        ),
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Text(
                              'üë¶',
                              style: TextStyle(fontSize: screenWidth * 0.05),
                            ),
                            SizedBox(width: 8),
                            Text(
                              'ÎÇ®ÏïÑ',
                              style: TextStyle(
                                color: _selectedGender == 'male'
                                    ? Colors.white
                                    : Color(0xFF8B5A6B),
                                fontWeight: FontWeight.w500,
                                fontSize: screenWidth * 0.035,
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                  ),
                  SizedBox(width: 12),
                  Expanded(
                    child: GestureDetector(
                      onTap: () => setState(() => _selectedGender = 'female'),
                      child: Container(
                        padding: EdgeInsets.symmetric(vertical: screenHeight * 0.02),
                        decoration: BoxDecoration(
                          color: _selectedGender == 'female'
                              ? Color(0xFF8B5A6B)
                              : Color(0xFFFFE7B0),
                          borderRadius: BorderRadius.circular(12),
                          border: Border.all(
                            color: _selectedGender == 'female'
                                ? Color(0xFF8B5A6B)
                                : Color(0xFFECA666),
                            width: 1,
                          ),
                        ),
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Text(
                              'üëß',
                              style: TextStyle(fontSize: screenWidth * 0.05),
                            ),
                            SizedBox(width: 8),
                            Text(
                              'Ïó¨ÏïÑ',
                              style: TextStyle(
                                color: _selectedGender == 'female'
                                    ? Colors.white
                                    : Color(0xFF8B5A6B),
                                fontWeight: FontWeight.w500,
                                fontSize: screenWidth * 0.035,
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                  ),
                  SizedBox(width: 12),
                  Expanded(
                    child: GestureDetector(
                      onTap: () => setState(() => _selectedGender = 'unknown'),
                      child: Container(
                        padding: EdgeInsets.symmetric(vertical: screenHeight * 0.02),
                        decoration: BoxDecoration(
                          color: _selectedGender == 'unknown'
                              ? Color(0xFF8B5A6B)
                              : Color(0xFFFFE7B0),
                          borderRadius: BorderRadius.circular(12),
                          border: Border.all(
                            color: _selectedGender == 'unknown'
                                ? Color(0xFF8B5A6B)
                                : Color(0xFFECA666),
                            width: 1,
                          ),
                        ),
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Text(
                              'üë∂',
                              style: TextStyle(fontSize: screenWidth * 0.05),
                            ),
                            SizedBox(width: 8),
                            Text(
                              'Î™®Î¶Ñ',
                              style: TextStyle(
                                color: _selectedGender == 'unknown'
                                    ? Colors.white
                                    : Color(0xFF8B5A6B),
                                fontWeight: FontWeight.w500,
                                fontSize: screenWidth * 0.035,
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                  ),
                ],
              ),

              SizedBox(height: screenHeight * 0.03),

              // ÏÉùÏùº ÏÑ†ÌÉù
              Text(
                'ÏÉùÏùº (Ï∂úÏÇ∞ ÏòàÏ†ïÏùº)',
                style: TextStyle(
                  fontSize: screenWidth * 0.04,
                  fontWeight: FontWeight.w600,
                  color: Color(0xFF8B5A6B),
                ),
              ),
              SizedBox(height: screenHeight * 0.01),
              GestureDetector(
                onTap: _pickDate,
                child: Container(
                  height: screenHeight * 0.07,
                  padding: EdgeInsets.symmetric(horizontal: screenWidth * 0.04),
                  decoration: BoxDecoration(
                    color: Color(0xFFFFE7B0),
                    borderRadius: BorderRadius.circular(16),
                    border: Border.all(color: Color(0xFFECA666), width: 1),
                  ),
                  alignment: Alignment.centerLeft,
                  child: Row(
                    children: [
                      Icon(
                        Icons.calendar_today,
                        color: Color(0xFF8B5A6B),
                        size: screenWidth * 0.05,
                      ),
                      SizedBox(width: 12),
                      Expanded(
                        child: Text(
                          _selectedDate != null
                              ? '${_selectedDate!.year}-${_selectedDate!.month.toString().padLeft(2, '0')}-${_selectedDate!.day.toString().padLeft(2, '0')}'
                              : 'ÏïÑÏù¥Ïùò ÏÉùÏùº(Ï∂úÏÇ∞ ÏòàÏ†ïÏùº)ÏùÑ ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî',
                          style: TextStyle(
                            fontSize: screenWidth * 0.035,
                            color: _selectedDate != null ? Color(0xFF3B2D2C) : Colors.grey[600],
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
              ),

              Spacer(),

              // Ï†ÄÏû• Î≤ÑÌäº
              ElevatedButton(
                onPressed: _isLoading
                    ? null
                    : () async {
                  final success = await _saveChildInfo();
                  if (success) {
                    Navigator.pushReplacementNamed(context, '/home');
                  }
                },
                style: ElevatedButton.styleFrom(
                  backgroundColor: Color(0xFF8B5A6B),
                  foregroundColor: Colors.white,
                  minimumSize: Size(double.infinity, screenHeight * 0.06),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(24),
                  ),
                  textStyle: TextStyle(
                    fontSize: screenWidth * 0.04,
                    fontWeight: FontWeight.w600,
                  ),
                ),
                child: _isLoading
                    ? SizedBox(
                  height: 20,
                  width: 20,
                  child: CircularProgressIndicator(
                    strokeWidth: 2,
                    valueColor: AlwaysStoppedAnimation<Color>(Colors.white),
                  ),
                )
                    : Text('Ï†ÄÏû•ÌïòÍ≥† ÏãúÏûëÌïòÍ∏∞'),
              ),

              SizedBox(height: screenHeight * 0.015),

              // Í±¥ÎÑàÎõ∞Í∏∞ Î≤ÑÌäº
              TextButton(
                onPressed: _isLoading
                    ? null
                    : () {
                  Navigator.pushReplacementNamed(context, '/home');
                },
                child: Text(
                  'ÎÇòÏ§ëÏóê ÏûÖÎ†•ÌïòÍ∏∞',
                  style: TextStyle(
                    color: Color(0xFF9E9E9E),
                    fontSize: screenWidth * 0.035,
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}